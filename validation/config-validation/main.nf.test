nextflow_pipeline {

    name "Test nf-core-utils config validation functions"
    script "../config-validation/main.nf"
    config "../config-validation/nextflow.config"

    test("Should validate configuration functions successfully") {
        
        when {
            params {
                // Use test parameters
            }
        }

        then {
            assert workflow.success
            assert workflow.exitStatus == 0
            
            // Verify basic pipeline execution markers (stdout is a list)
            assert workflow.stdout.any { it.contains("Pipeline is starting") }
            assert workflow.stdout.any { it.contains("Pipeline complete") }
            
            // Snapshot the basic workflow execution
            assert snapshot(
                workflow.stdout,
                workflow.exitStatus,
                workflow.success
            ).match("config_validation_success")
        }
    }

    test("Should handle conda channel configuration") {
        
        when {
            params {
                // Test conda configuration
            }
        }

        then {
            assert workflow.success
            
            // Should have conda channel warnings in stderr (this is expected)
            assert workflow.stderr.toString().contains("Conda configuration") || 
                   workflow.stderr.toString().contains("conda-forge") ||
                   workflow.stderr.toString().contains("bioconda")
            
            // Snapshot conda-related outputs
            assert snapshot(
                workflow.stderr.findAll { it.contains("conda") || it.contains("Conda") }
            ).match("conda_configuration_output")
        }
    }

    test("Should complete without errors despite conda warnings") {
        
        when {
            params {
                // Test error handling
            }
        }

        then {
            assert workflow.success
            assert workflow.exitStatus == 0
            
            // Even with conda warnings, workflow should complete successfully
            assert workflow.stdout.any { it.contains("Pipeline complete") }
            
            // Snapshot successful completion despite warnings
            assert snapshot(
                workflow.success,
                workflow.exitStatus
            ).match("successful_completion")
        }
    }
}
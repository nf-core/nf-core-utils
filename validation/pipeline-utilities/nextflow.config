/*
 * Nextflow configuration for pipeline utilities validation
 */

// Enable the plugin for testing
plugins {
    id 'nf-core-utils'
}

// Workflow manifest - simulates fetchngs pipeline
manifest {
    name            = 'nf-core/fetchngs'
    version         = '1.12.0'
    description     = 'Pipeline utilities validation for nf-core-utils plugin'
    homePage        = 'https://github.com/nf-core/fetchngs'
    author          = 'nf-core'
    nextflowVersion = '>=23.04.0'
}

// Workflow parameters - similar to fetchngs
params {
    // Input/Output
    input                      = 'SRR_Acc_List.txt'
    outdir                     = "${launchDir}/validation_results"

    // Reference genome options
    genome                     = null
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    igenomes_ignore            = false

    // Download method options
    download_method            = 'sratools'
    // sratools, aspera

    // SRA / ENA / GEO / DDBJ download options
    skip_fastqc                = false
    skip_multiqc               = false

    // Boilerplate options
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes,igenomes_base'

    // Config options
    custom_config_version      = 'master'
    custom_config_base         = 'https://raw.githubusercontent.com/nf-core/configs/master'
    config_profile_name        = null
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null

    // Max resource options
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // Test-specific parameters
    test_mode                  = true
}

// Process configuration
process {
    // Use local executor for testing
    executor = 'local'

    // Resource limits for test processes
    memory   = '1 GB'
    time     = '10 min'
    cpus     = 1
}

// Report configuration
timeline {
    enabled = true
    file    = "${params.outdir}/execution_timeline.html"
}

report {
    enabled = true
    file    = "${params.outdir}/execution_report.html"
}

trace {
    enabled = true
    file    = "${params.outdir}/execution_trace.txt"
}

dag {
    enabled = true
    file    = "${params.outdir}/pipeline_dag.svg"
}

// Logging configuration
log.level = 'INFO'

// Testing profiles
profiles {

    test {
        // Quick test configuration
        params.max_memory = '6.GB'
        params.max_cpus   = 2
        params.max_time   = '6.h'
        process.memory    = '512 MB'
        process.time      = '5 min'
    }

    debug {
        // Enhanced debugging
        log.level            = 'DEBUG'
        process.beforeScript = 'echo "Starting process: $task.process"'
        process.afterScript  = 'echo "Completed process: $task.process"'
    }

    local {
        // Local testing (default)
        executor.name = 'local'
        executor.cpus = 2
    }
}

// Validation-specific settings
validation {
    // Enable strict validation
    strictMode      = true

    // Expected output files
    expectedOutputs = [
        'params.json'
    ]
}

// Cleanup configuration
cleanup = false

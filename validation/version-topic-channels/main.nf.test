nextflow_pipeline {

    name "Test nf-core-utils version utilities migration"
    script "../version-topic-channels/main.nf"
    config "../version-topic-channels/nextflow.config"

    test("Should migrate version utilities successfully") {
        
        when {
            params {
                // Use test parameters for version utilities
            }
        }

        then {
            assert workflow.success
            assert workflow.exitStatus == 0
            
            // Verify basic pipeline execution markers (stdout is a list)
            assert workflow.stdout.any { it.contains("Pipeline is starting") }
            assert workflow.stdout.any { it.contains("Pipeline complete") }
            
            // Snapshot core version testing outputs
            assert snapshot(
                workflow.stdout,
                workflow.exitStatus,
                workflow.success
            ).match("version_utilities_success")
        }
    }

    test("Should process version files and generate output") {
        
        when {
            params {
                // Version file processing test
            }
        }

        then {
            assert workflow.success
            
            // Verify workflow completed successfully
            assert workflow.stdout.any { it.contains("Pipeline complete") }
            
            // Snapshot version processing results
            assert snapshot(
                workflow.success,
                workflow.exitStatus
            ).match("version_processing_complete")
        }
    }

    test("Should handle version generation without errors") {
        
        when {
            params {
                // Version generation test
            }
        }

        then {
            assert workflow.success
            assert workflow.exitStatus == 0
            
            // Pipeline should complete successfully
            assert workflow.stdout.any { it.contains("Pipeline complete") }
            
            // Snapshot successful execution
            assert snapshot(
                workflow.success,
                workflow.exitStatus
            ).match("version_generation_success")
        }
    }
}
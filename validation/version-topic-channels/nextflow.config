/*
 * Nextflow configuration for nf-core-utils plugin validation
 */

// Enable the plugin for testing
plugins {
    id 'nf-core-utils'
}

// Workflow manifest - simulates a real pipeline
manifest {
    name            = 'nf-core-utils-validation'
    version         = '1.0.0'
    description     = 'E2E validation test for nf-core-utils plugin'
    homePage        = 'https://github.com/nf-core/nf-core-utils'
    author          = 'nf-core'
    nextflowVersion = '>=23.04.0'
}

// Workflow parameters
params {
    // Output directory for test files
    outdir = "${launchDir}/validation_results"
    
    // Enable detailed logging for validation
    help = false
}

// Process configuration
process {
    // Use local executor for testing
    executor = 'local'
    
    // Resource limits for test processes
    memory = '1 GB'
    time   = '10 min'
    cpus   = 1
}

// Report configuration
timeline {
    enabled = true
    file    = "${params.outdir}/execution_timeline.html"
}

report {
    enabled = true
    file    = "${params.outdir}/execution_report.html"
}

trace {
    enabled = true
    file    = "${params.outdir}/execution_trace.txt"
}

dag {
    enabled = true
    file    = "${params.outdir}/pipeline_dag.svg"
}

// Logging configuration
log.level = 'INFO'

// Testing profiles
profiles {
    
    test {
        // Quick test configuration
        process.memory = '512 MB'
        process.time   = '5 min'
    }
    
    debug {
        // Enhanced debugging
        log.level = 'DEBUG'
        process.beforeScript = 'echo "Starting process: $task.process"'
        process.afterScript  = 'echo "Completed process: $task.process"'
    }
    
    local {
        // Local testing (default)
        executor.name = 'local'
        executor.cpus = 2
    }
}

// Validation-specific settings
validation {
    // Enable strict validation
    strictMode = true
    
    // Expected output files
    expectedOutputs = [
        'nf_core_utils_software_mqc_versions.yml'
    ]
}

// Cleanup configuration
cleanup = false  // Keep intermediate files for inspection during validation